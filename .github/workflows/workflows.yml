name: aws workflow
on:
  push:
    branches:
      - wip
      - feature/wip

env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_VAR_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  TF_VAR_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  execute-tf-flow:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout código
      uses: actions/checkout@v2

    - name: Configurar ambiente Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0

    - name: Inicializar Terraform
      working-directory: ./terraform/
      run: |
        source ./.export_template
        export
        terraform init \
        -backend-config="bucket=${TF_VAR_tf_bucket_name}" \
        -backend-config="key=terraform" \
        -backend-config="region=${TF_VAR_region}"

    - name: Planejar recursos
      working-directory: ./terraform/
      run: |
        source ./.export_template
        terraform plan

    - name: Aplicar recursos
      if: "contains(github.event.head_commit.message, '[terraform-apply]')"
      working-directory: ./terraform/
      run: |
        source ./.export_template
        terraform apply -auto-approve

    - name: Destruir recursos
      if: "contains(github.event.head_commit.message, '[terraform-destroy]')"
      working-directory: ./terraform/
      run: |
        source ./.export_template
        terraform destroy -auto-approve

    - name: Prompt Message
      run: echo "be aware of the commit flags"
  
  app-pipe:
    runs-on: ubuntu-latest
    needs: execute-tf-flow
    steps:
    - name: Checkout código
      uses: actions/checkout@v2

    - name: Configurar ambiente Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.11

    - name: Instalar dependências
      if: "contains(github.event.head_commit.message, '[deploy-app]') && contains(github.event.head_commit.message, '[terraform-apply]')"
      run: pip install -r ./app/requirements.txt

    - name: Enviar mensagem para SQS
      if: "contains(github.event.head_commit.message, '[deploy-app]') && contains(github.event.head_commit.message, '[terraform-apply]')"
      run: |
        source ./.export_template
        python ./app/app.py

    - name: Prompt Message
      run: echo "be aware of the commit flags"
