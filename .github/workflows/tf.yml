name: Criar recursos AWS com Terraform
on:
  push:
    branches:
      - feature/actions-2
env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true

jobs:
  criar-recursos:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v2

      - name: Configurar ambiente Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0

      - name: Inicializar Terraform
        if: "contains( env.commit_msg, '[terraform-apply]')"
        working-directory: ./terraform/
        run: |
          source ./.export_template
          export
          terraform init \
          -backend-config="bucket=${TF_VAR_tf_bucket_name}" \
          -backend-config="key=terraform" \
          -backend-config="region=${TF_VAR_region}"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Planejar recursos
        working-directory: ./terraform/
        run: |
          source ./.export_template
          terraform plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          TF_VAR_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Aplicar recursos
        if: "contains( env.commit_msg, '[terraform-apply]')"
        working-directory: ./terraform/
        run: |
          source ./.export_template
          terraform apply -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          TF_VAR_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  
